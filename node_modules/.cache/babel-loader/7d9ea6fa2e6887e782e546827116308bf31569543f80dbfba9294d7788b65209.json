{"ast":null,"code":"var _jsxFileName = \"/Users/somnathdas/Documents/codelab/react-context-provider-todolist-example/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useState, createContext, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoContext = /*#__PURE__*/createContext();\nconst ToDoProvider = ({\n  children\n}) => {\n  _s();\n  const [task, setTask] = useState([{\n    title: 'This your first todo list',\n    complete: true\n  }]);\n  const addNewTask = title => {\n    setTask([...task, {\n      title,\n      complete: true\n    }]);\n  };\n  const completeTask = title => {\n    setTask([...task, {\n      title,\n      complete: true\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(ToDoContent.Provider, {\n    value: {\n      addNewTask,\n      completeTask,\n      task\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoProvider, \"Q3sNkppSexLmKvjkXnFna1JURB8=\");\n_c = ToDoProvider;\nconst ToDoForm = () => {\n  _s2();\n  const [title, setTitle] = useState('');\n  const {\n    addNewTask\n  } = useContext(ToDoContext);\n  const submit = () => {\n    addNewTask(title);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setTitle(e.target.value),\n      value: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s2(ToDoForm, \"rfbGo9NvbLGxUmR7usZUJyp/OVk=\");\n_c2 = ToDoForm;\nconst ToDoList = () => {\n  _s3();\n  const {\n    task,\n    completeTask\n  } = useContext(ToDoContext);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: task.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.title, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            completeTask(item.title);\n          },\n          children: \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 51\n        }, this)]\n      }, item.title, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s3(ToDoList, \"iLzMeuiO90D+d+tSOcV0c3AFWMk=\");\n_c3 = ToDoList;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ToDoProvider, {\n    children: [/*#__PURE__*/_jsxDEV(ToDoForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ToDoList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ToDoProvider\");\n$RefreshReg$(_c2, \"ToDoForm\");\n$RefreshReg$(_c3, \"ToDoList\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","createContext","useContext","jsxDEV","_jsxDEV","ToDoContext","ToDoProvider","children","_s","task","setTask","title","complete","addNewTask","completeTask","ToDoContent","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","ToDoForm","_s2","setTitle","submit","onSubmit","type","onChange","e","target","_c2","ToDoList","_s3","map","item","onClick","_c3","App","_c4","$RefreshReg$"],"sources":["/Users/somnathdas/Documents/codelab/react-context-provider-todolist-example/src/App.js"],"sourcesContent":["import { useState, createContext, useContext } from 'react';\n\nconst ToDoContext = createContext();\n\nconst ToDoProvider = ({children}) => {\n  \n  const [task, setTask] = useState([{title: 'This your first todo list', complete : true }]);\n  const addNewTask = (title) => {\n    setTask([...task, { title ,  complete : true }])\n  } \n  const completeTask = (title) => {\n    setTask([...task, { title ,  complete : true }])\n  } \n  return (\n    <ToDoContent.Provider value={{addNewTask, completeTask, task}}>\n      {children}\n    </ToDoContent.Provider>\n  )\n}\n\nconst ToDoForm = () => {\n  const [title, setTitle] = useState('');\n  const { addNewTask } = useContext(ToDoContext);\n  const submit = () => {\n    addNewTask(title);\n  }\n  return (\n    <form onSubmit={submit}>\n      <input type=\"text\" onChange={(e)=>setTitle(e.target.value)} value={title}/>\n      <button type='submit'>Add New Task</button>\n    </form>\n  \n  )\n}\n\nconst ToDoList = () =>{\n  const { task, completeTask } = useContext(ToDoContext);\n  return (\n    <ul>\n      { task.map((item) => {\n        return <li key={item.title} >{item.title} <button onClick={() => {completeTask(item.title)}}>Complete</button></li>\n      })\n      }\n    </ul>\n  )\n}\n\nfunction App() {\n  return (\n        <ToDoProvider>\n          <ToDoForm/>\n          <ToDoList/>\n        </ToDoProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}