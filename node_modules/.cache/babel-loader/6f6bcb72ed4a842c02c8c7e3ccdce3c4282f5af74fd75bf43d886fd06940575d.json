{"ast":null,"code":"var _jsxFileName = \"/Users/somnathdas/Documents/codelab/react-context-provider-todolist-example/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useState, createContext, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoContext = /*#__PURE__*/createContext();\nconst ToDoProvider = ({\n  children\n}) => {\n  _s();\n  const [task, setTask] = useState([{\n    id: 1,\n    title: 'This your first todo list',\n    complete: true\n  }]);\n  const addNewTask = title => {\n    setTask([...task, {\n      id: task.length + 1,\n      title,\n      complete: false\n    }]);\n  };\n  const completeTask = object => {\n    let list = [...task];\n    list.map(item => {\n      if (item.id === object.id) item.complete = true;\n      return item;\n    });\n    setTask(list);\n  };\n  return /*#__PURE__*/_jsxDEV(ToDoContext.Provider, {\n    value: {\n      addNewTask,\n      completeTask,\n      task\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoProvider, \"O/KUijAM/TKIGUYdlYFqty2aFBo=\");\n_c = ToDoProvider;\nconst ToDoForm = () => {\n  _s2();\n  const {\n    addNewTask\n  } = useContext(ToDoContext);\n  const [title, setTitle] = useState();\n  const [date, setDate] = useState();\n  const submit = e => {\n    e.preventDefault();\n    if (!title || !date) {\n      alert('Enter a title');\n      return;\n    }\n    addNewTask(title);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setTitle(e.target.value),\n      value: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"datetime-local\",\n      onChange: e => setDate(e.target.value),\n      value: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s2(ToDoForm, \"0GA+2C6q4R5NVAejNKsPfM+IMxo=\");\n_c2 = ToDoForm;\nconst ToDoList = () => {\n  _s3();\n  const {\n    task,\n    completeTask\n  } = useContext(ToDoContext);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: task.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          textDecoration: item.complete ? 'line-through' : 'none'\n        },\n        children: [item.title, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            visibility: item.complete ? 'hidden' : 'visible'\n          },\n          onClick: () => {\n            completeTask(item);\n          },\n          children: \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 126\n        }, this)]\n      }, item.id.toString(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s3(ToDoList, \"iLzMeuiO90D+d+tSOcV0c3AFWMk=\");\n_c3 = ToDoList;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ToDoProvider, {\n    children: [/*#__PURE__*/_jsxDEV(ToDoForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ToDoList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ToDoProvider\");\n$RefreshReg$(_c2, \"ToDoForm\");\n$RefreshReg$(_c3, \"ToDoList\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","createContext","useContext","jsxDEV","_jsxDEV","ToDoContext","ToDoProvider","children","_s","task","setTask","id","title","complete","addNewTask","length","completeTask","object","list","map","item","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","ToDoForm","_s2","setTitle","date","setDate","submit","e","preventDefault","alert","onSubmit","type","onChange","target","_c2","ToDoList","_s3","style","textDecoration","visibility","onClick","toString","_c3","App","_c4","$RefreshReg$"],"sources":["/Users/somnathdas/Documents/codelab/react-context-provider-todolist-example/src/App.js"],"sourcesContent":["import { useState, createContext, useContext } from 'react';\n\nconst ToDoContext = createContext();\n\nconst ToDoProvider = ({children}) => {\n  \n  const [task, setTask] = useState([{id : 1, title: 'This your first todo list', complete : true }]);\n  const addNewTask = (title) => {\n    \n    setTask([...task, { id : task.length + 1 , title ,  complete : false }])\n  } \n  const completeTask = (object) => {\n    let list = [...task];\n    list.map(item => {\n      if(item.id === object.id)\n      item.complete = true;\n      return item;\n    });\n    setTask(list);\n  } \n  return (\n    <ToDoContext.Provider value={{addNewTask, completeTask, task}}>\n      {children}\n    </ToDoContext.Provider>\n  )\n}\n\nconst ToDoForm = () => {\n  const { addNewTask } = useContext(ToDoContext);\n  const [title, setTitle] = useState();\n  const [date, setDate] = useState();\n  const submit = (e) => {\n    e.preventDefault();\n    if(!title || !date) {\n      alert('Enter a title');\n      return;\n    }\n    addNewTask(title);\n  }\n  return (\n    <form onSubmit={submit}>\n      <input type=\"text\" onChange={(e)=>setTitle(e.target.value)} value={title}/>\n      <input type=\"datetime-local\" onChange={(e)=>setDate(e.target.value)} value={date}/>\n      <button type='submit'>Add New Task</button>\n    </form>\n  \n  )\n}\n\nconst ToDoList = () =>{\n  const { task, completeTask } = useContext(ToDoContext);\n  return (\n    <ul>\n      { task.map((item) => {\n        return <li key={item.id.toString()} style={{textDecoration : item.complete ? 'line-through' : 'none'}} >{item.title} <button style={{visibility : item.complete ? 'hidden' : 'visible'}} onClick={() => {completeTask(item)}} >Complete</button></li>\n      })\n      }\n    </ul>\n  )\n}\n\nfunction App() {\n  return (\n        <ToDoProvider>\n          <ToDoForm/>\n          <ToDoList/>\n        </ToDoProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}